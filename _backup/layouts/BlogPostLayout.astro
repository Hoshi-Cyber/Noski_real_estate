---
import MainLayout from './MainLayout.astro';

const {
  title,
  description,
  category,
  pubDate,
  heroImage,
  readingTime,
  related = [],
} = Astro.props;

const when = pubDate ? new Date(pubDate) : null;
const fmt = new Intl.DateTimeFormat('en-KE', { dateStyle: 'long' });

// Fallback: if heroImage 404s or missing, hide it gracefully
const img = heroImage && typeof heroImage === 'string' ? heroImage : '';
---

<MainLayout title={`${title} | Severino Realty`} description={description}>
  <article class="max-w-3xl mx-auto px-4 py-10">
    <header class="mb-6">
      {category && <a href={`/blog/${category}`} class="text-xs font-semibold text-[color:var(--color-cta)]">{category}</a>}
      <h1 class="mt-1 text-2xl md:text-3xl font-bold text-primary">{title}</h1>
      <div class="mt-2 text-xs text-neutral-500 flex items-center gap-2">
        {when && <time datetime={when.toISOString()}>{fmt.format(when)}</time>}
        {readingTime && <>
          <span aria-hidden="true">â€¢</span>
          <span>{readingTime} min read</span>
        </>}
      </div>
      {img && (
        <figure class="mt-5 rounded-lg overflow-hidden ring-1 ring-neutral-200 bg-neutral-100">
          <img src={img} alt={title} class="w-full h-auto" loading="eager" decoding="async" />
        </figure>
      )}
    </header>

    <div class="prose prose-neutral max-w-none">
      <slot />
    </div>

    {related?.length > 0 && (
      <aside class="mt-10 border-t pt-6">
        <h2 class="text-lg font-semibold text-primary">Related reading</h2>
        <ul class="mt-3 grid gap-3 sm:grid-cols-2">
          {related.map((p) => (
            <li class="rounded-md ring-1 ring-neutral-200 bg-white p-3">
              <a href={`/blog/${p.slug}`} class="font-medium hover:underline">{p.data.title}</a>
              <p class="text-sm text-neutral-600 line-clamp-2 mt-1">{p.data.description}</p>
            </li>
          ))}
        </ul>
      </aside>
    )}
  </article>
</MainLayout>
