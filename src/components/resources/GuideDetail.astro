---
/**
 * GuideDetail: hero + steps summary grid + numbered sections + optional checklist + related
 *
 * Props:
 *  - title: string
 *  - intro?: string  (alias: summary)
 *  - estReadMin?: number
 *  - checklistUrl?: string            // e.g. "/docs/resources/buyer-checklist.pdf"
 *  - steps: Array<{
 *      id?: string;
 *      heading: string;
 *      bodyHtml?: string;            // rich HTML
 *      pdfUrl?: string;              // per-step PDF (optional)
 *    }>
 *  - related?: Array<{ title: string; href: string; desc?: string }>
 */

import RelatedGuideCard from './RelatedGuideCard.astro';

const {
  title,
  intro = '',
  summary = '',
  estReadMin = 8,
  checklistUrl = '',
  steps = [],
  related = [],
} = Astro.props;

const lead = (intro || summary || '').trim();

const slugify = (str = '') =>
  str.toLowerCase().trim()
    .replace(/['â€™"]/g, '')
    .replace(/[^a-z0-9]+/g, '-')
    .replace(/^-+|-+$/g, '');

const stripHtml = (html = '') => html.replace(/<[^>]*>/g, '').replace(/\s+/g, ' ').trim();

const stepsWithIds = steps.map((s, i) => ({
  ...s,
  id: s.id && s.id.length ? s.id : slugify(`${i + 1}-${s.heading || 'step'}`),
  excerpt: stripHtml(s.bodyHtml || '').slice(0, 140),
}));
---

<section class="max-w-7xl mx-auto px-4 py-8 md:py-10">
  <!-- Hero -->
  <header class="mb-6 md:mb-10">
    {Astro.slots.has('breadcrumbs') && <div class="mb-3"><slot name="breadcrumbs" /></div>}
    <h1 class="text-2xl md:text-3xl font-bold text-primary">{title}</h1>
    {lead && <p class="mt-2 text-neutral-700">{lead}</p>}
    <p class="mt-1 text-sm text-neutral-500">Estimated read: {estReadMin} min</p>
  </header>

  <!-- Main (no left TOC) -->
  <article class="space-y-10">
    <!-- SUMMARY GRID -->
    <section aria-labelledby="steps-overview">
      <h2 id="steps-overview" class="section-subtitle mb-3">Overview</h2>
      <div class="grid-steps" data-count={stepsWithIds.length}>
        {stepsWithIds.map((s, i) => (
          <article class="step-card" id={`card-${s.id}`}>
            <div class="step-head">
              <span class="step-index">{i + 1}</span>
              <h3 class="step-title">{s.heading}</h3>
            </div>
            {s.bodyHtml && <p class="step-body line-clamp-2">{stripHtml(s.bodyHtml)}</p>}
            <div class="step-actions">
              <a href={`#${s.id}`} class="btn-subtle">Read section</a>
              {s.pdfUrl && (
                <a href={s.pdfUrl} class="btn-cta !px-4 !py-2 text-sm" target="_blank" rel="noopener">
                  Download PDF
                </a>
              )}
            </div>
          </article>
        ))}
      </div>

      {checklistUrl && (
        <div class="mt-6 flex justify-center">
          <a href={checklistUrl} class="btn-cta rounded-md text-sm">Download all-in-one checklist</a>
        </div>
      )}
    </section>

    <!-- DETAILED SECTIONS -->
    <section class="space-y-8" aria-labelledby="steps-detail">
      <h2 id="steps-detail" class="section-title">Detailed steps</h2>
      <ol class="detail-list">
        {stepsWithIds.map((s, i) => (
          <li class="detail-item scroll-mt-24" id={s.id}>
            <div class="detail-head">
              <span class="detail-index">{i + 1}</span>
              <h3 class="text-lg font-semibold text-primary">Step {i + 1}: {s.heading}</h3>
            </div>

            {s.bodyHtml && (
              <div class="prose max-w-none prose-p:my-3 prose-li:my-1 text-neutral-700 detail-body" set:html={s.bodyHtml} />
            )}

            <div class="detail-actions">
              {s.pdfUrl && <a href={s.pdfUrl} class="pdf-badge" target="_blank" rel="noopener">PDF</a>}
              <a href={`#card-${s.id}`} class="text-sm text-neutral-700 underline">Back to overview</a>
            </div>
          </li>
        ))}
      </ol>
    </section>

    <!-- Related Guides -->
    {related?.length > 0 && (
      <section class="mt-6">
        <h3 class="text-lg font-semibold text-primary mb-4">Related Guides</h3>
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-5">
          {related.slice(0, 3).map((r) => (
            <RelatedGuideCard {...r} compact />
          ))}
        </div>
      </section>
    )}
  </article>
</section>
