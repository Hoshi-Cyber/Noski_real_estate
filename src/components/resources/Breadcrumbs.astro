---
export interface Crumb { label: string; href?: string }
export interface Props {
  items: Crumb[];          // e.g., [{label:'Home', href:'/'}, {label:'Resources', href:'/resources'}, {label:'Guides', href:'/resources/guides'}, {label:'Buying'}]
  class?: string;
}

const { items = [], class: klass = '' } = Astro.props;
const list = items.filter(Boolean);

// JSON-LD (BreadcrumbList)
const jsonLd = {
  '@context': 'https://schema.org',
  '@type': 'BreadcrumbList',
  itemListElement: list.map((c, i) => ({
    '@type': 'ListItem',
    position: i + 1,
    name: c.label,
    ...(c.href ? { item: new URL(c.href, Astro.site ?? 'https://example.com').toString() } : {})
  })),
};
---

<nav aria-label="Breadcrumb" class={`text-sm text-neutral-600 mb-4 ${klass}`}>
  <ol class="flex flex-wrap items-center gap-1">
    {list.map((c, i) => {
      const last = i === list.length - 1;
      return (
        <>
          <li class="flex items-center">
            {c.href && !last ? (
              <a href={c.href} class="hover:underline hover:text-primary focus:outline-none focus:ring-2 focus:ring-[color:var(--color-cta)]">
                {c.label}
              </a>
            ) : (
              <span class="text-neutral-500" aria-current="page">{c.label}</span>
            )}
          </li>
          {!last && (
            <li aria-hidden="true" class="px-1 text-neutral-400">/</li>
          )}
        </>
      );
    })}
  </ol>

  <script type="application/ld+json">
    {JSON.stringify(jsonLd)}
  </script>
</nav>
