---
/** FAQ category: searchable accordion + link to matching guide */
const {
  title,
  guideUrl = '#',
  faqs = /** [{ q, aHtml }] */ []
} = Astro.props;
---

<section class="max-w-7xl mx-auto px-4 py-8 md:py-10">
  <!-- Header -->
  <header class="mb-6 md:mb-8">
    <h1 class="text-2xl md:text-3xl font-bold text-primary">{title} FAQs</h1>
    <div class="mt-3 flex items-center gap-3">
      <!-- Search -->
      <input
        id="faq-q"
        type="search"
        placeholder="Search this category"
        class="w-full max-w-lg rounded-md ring-1 ring-neutral-300 px-3 py-2 text-sm"
      />
      <!-- Guide Link -->
      <a
        href={guideUrl}
        class="shrink-0 rounded-md px-3 py-2 bg-[color:var(--color-cta)] text-white text-sm font-medium hover:opacity-90 transition"
      >
        Read full Guide
      </a>
    </div>
  </header>

  <!-- FAQ Accordion -->
  <div
    id="faq-list"
    class="divide-y divide-neutral-200 rounded-md ring-1 ring-neutral-200 bg-white shadow-sm"
  >
    {faqs.map((f, i) => (
      <details class="group" data-title={f.q}>
        <summary
          class="list-none cursor-pointer px-4 py-3 flex items-center justify-between hover:bg-neutral-50"
        >
          <span class="font-medium text-primary">{f.q}</span>
          <svg
            class="w-4 h-4 text-neutral-500 transition-transform group-open:rotate-180"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 9l-7 7-7-7"
            />
          </svg>
        </summary>
        <div
          class="px-4 pb-4 text-neutral-700 prose max-w-none"
          set:html={f.aHtml}
        ></div>
      </details>
    ))}
  </div>
</section>

<script type="module" client:load>
  const q = document.getElementById('faq-q');
  const list = document.getElementById('faq-list');
  if (q && list) {
    q.addEventListener('input', () => {
      const term = q.value.toLowerCase();
      list.querySelectorAll('[data-title]').forEach(d => {
        const t = d.getAttribute('data-title')?.toLowerCase() || '';
        d.classList.toggle('hidden', term && !t.includes(term));
      });
    });
  }
</script>
