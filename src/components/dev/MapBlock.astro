---
type Props = {
  lat?: number;
  lng?: number;
  address?: string;
  zoom?: number;            // default 15
  height?: string;          // e.g. "320px" | "24rem"
  class?: string;
  useEmbed?: boolean;       // set true to render <iframe> embed instead of static image
};

const {
  lat,
  lng,
  address = '',
  zoom = 15,
  height = '320px',
  class: cls = '',
  useEmbed = false,
} = Astro.props as Props;

const hasCoords = typeof lat === 'number' && typeof lng === 'number';

// Prefer Google Static Maps when key is present. Fallback to OSM static map.
const GOOGLE_KEY = import.meta.env.PUBLIC_GOOGLE_MAPS_STATIC_KEY as string | undefined;

function googleStaticUrl(lat: number, lng: number, zoom: number, w = 1200, h = 600) {
  const base = 'https://maps.googleapis.com/maps/api/staticmap';
  const params = new URLSearchParams({
    center: `${lat},${lng}`,
    zoom: String(zoom),
    size: `${w}x${h}`,
    maptype: 'roadmap',
    markers: `color:0x2563EB|${lat},${lng}`,
    key: GOOGLE_KEY || '',
    scale: '2',
  });
  return `${base}?${params.toString()}`;
}

function osmStaticUrl(lat: number, lng: number, zoom: number, w = 1200, h = 600) {
  const base = 'https://staticmap.openstreetmap.de/staticmap.php';
  const params = new URLSearchParams({
    center: `${lat},${lng}`,
    zoom: String(zoom),
    size: `${w}x${h}`,
    markers: `${lat},${lng},lightblue1`,
  });
  return `${base}?${params.toString()}`;
}

const staticUrl = hasCoords
  ? (GOOGLE_KEY ? googleStaticUrl(lat!, lng!, zoom) : osmStaticUrl(lat!, lng!, zoom))
  : null;

// Embed source: keyless Google Maps embed via q= query
const q = hasCoords ? `${lat},${lng}` : address;
const embedSrc = `https://www.google.com/maps?q=${encodeURIComponent(q || '')}&hl=en&z=${zoom}&output=embed`;

// External map link
const mapLink = hasCoords
  ? `https://www.google.com/maps/search/?api=1&query=${lat},${lng}`
  : `https://www.google.com/maps/search/${encodeURIComponent(address)}`;
---

<section class={`card-tight ${cls}`}>
  <h2 class="section-subtitle">Location</h2>

  <div class="rounded-lg overflow-hidden ring-1 ring-neutral-200 bg-white" style={`height:${height}`}>
    {useEmbed ? (
      <iframe
        src={embedSrc}
        loading="lazy"
        referrerpolicy="no-referrer-when-downgrade"
        class="w-full h-full border-0"
        aria-label="Map location"
      />
    ) : (
      <>
        {staticUrl ? (
          <a href={mapLink} target="_blank" rel="noopener" aria-label="Open in Google Maps" class="block">
            <img
              src={staticUrl}
              alt={address ? `Map showing ${address}` : `Map location ${lat}, ${lng}`}
              width="1200" height="600"
              loading="lazy" decoding="async"
              class="w-full h-full object-cover"
            />
          </a>
        ) : (
          <div class="w-full h-full flex items-center justify-center bg-neutral-100 text-neutral-600">
            <span class="text-sm">Map unavailable. Add coordinates or address.</span>
          </div>
        )}
      </>
    )}
  </div>

  {(address || hasCoords) && (
    <div class="mt-3 flex items-center justify-between gap-3">
      <p class="text-sm text-neutral-700 truncate">
        {address || (hasCoords ? `${lat}, ${lng}` : 'â€”')}
      </p>
      <a href={mapLink} target="_blank" rel="noopener" class="btn-outline px-3 py-1.5 text-sm">
        Open in Maps
      </a>
    </div>
  )}
</section>
