---
import { getCollection } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';
import PropertyCard from '../../components/PropertyCard.astro';

export const prerender = true;

function getArea(d: any): string {
  const loc = String(d?.location || '');
  const area = d?.area ? String(d.area) : String((loc.split(',')[0] || '').trim());
  return area.toLowerCase();
}

export async function getStaticPaths() {
  const listings = await getCollection('listings');
  const areas = Array.from(new Set(listings.map((l) => getArea(l.data)))).filter(Boolean);
  return areas.map((area) => ({ params: { slug: area } }));
}

// Resolve from params safely
const areaParam = String(Astro.params.slug || '').toLowerCase();

const listings = await getCollection('listings');
const filtered = listings.filter((l) => getArea(l.data) === areaParam);

// Pretty label for UI
const areaName =
  areaParam
    .split(' ')
    .map((w) => (w ? w[0].toUpperCase() + w.slice(1) : w))
    .join(' ') || 'Area';

const pageTitle = `Properties in ${areaName}`;
const pageDesc = `Browse listings in ${areaName}.`;
---

<MainLayout title={pageTitle} description={pageDesc}>
  <section class="max-w-7xl mx-auto px-4 py-12">
    <h1 class="text-3xl font-bold mb-8 capitalize">Properties in {areaName}</h1>

    {filtered.length > 0 ? (
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {filtered.map((listing) => (
          <PropertyCard listing={listing} />
        ))}
      </div>
    ) : (
      <p>No listings found in this area yet.</p>
    )}
  </section>
</MainLayout>
