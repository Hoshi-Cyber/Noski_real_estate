---
import { getCollection } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';
import PropertyCard from '../../components/PropertyCard.astro';

function getArea(d: any): string {
  const area = typeof d?.area === 'string' ? d.area.trim() : '';
  if (area) return area.toLowerCase();
  const loc = typeof d?.location === 'string' ? d.location : '';
  const first = loc.split(',')[0]?.trim() || '';
  return first.toLowerCase();
}

export async function getStaticPaths() {
  const listings = await getCollection('listings');
  const areas = Array.from(new Set(listings.map((l) => getArea(l.data)))).filter(Boolean);
  return areas.map((area) => ({
    params: { slug: area },
    props: { area },
  }));
}

const { area } = Astro.props as { area: string };
const listings = await getCollection('listings');
const filtered = listings.filter((l) => getArea(l.data) === area);
---

<MainLayout title={`Properties in ${area}`} description={`Browse listings in ${area}.`}>
  <section class="max-w-7xl mx-auto px-4 py-12">
    <h1 class="text-3xl font-bold mb-8 capitalize">Properties in {area}</h1>

    {filtered.length > 0 ? (
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {filtered.map((listing) => (
          <PropertyCard listing={listing} />
        ))}
      </div>
    ) : (
      <p>No listings found in this area yet.</p>
    )}
  </section>
</MainLayout>
