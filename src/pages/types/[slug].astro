---
import { getCollection } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';
import PropertyCard from '../../components/PropertyCard.astro';

export const prerender = true;

// Normalize a listing's category
function resolveCategory(d: Record<string, any> = {}) {
  if (d.category) return String(d.category).toLowerCase();
  const t = String(d.type || '').toLowerCase();
  if (t.includes('land')) return 'land';
  if (
    t.includes('apartment') ||
    t.includes('townhouse') ||
    t.includes('villa') ||
    t.includes('cabin')
  ) return 'residential';
  return 'residential';
}

export async function getStaticPaths() {
  const listings = await getCollection('listings');
  const categories = Array.from(
    new Set(
      listings
        .map((l) => resolveCategory(l.data))
        .filter(Boolean)
    )
  );
  return categories.map((cat) => ({
    params: { slug: cat },
    props: { cat },
  }));
}

// Prefer prop from getStaticPaths, fallback to URL param
const _props = (Astro.props ?? {}) as { cat?: string };
const cat = String(_props.cat ?? Astro.params?.slug ?? '').toLowerCase();

const listings = await getCollection('listings');
const filtered = listings.filter((l) => resolveCategory(l.data) === cat);

const pageTitle = cat ? `${cat} Properties` : 'Properties by Type';
const pageDesc = cat ? `Browse ${cat} listings.` : 'Browse listings by type.';
---

<MainLayout title={pageTitle} description={pageDesc}>
  <section class="max-w-7xl mx-auto px-4 py-12">
    <h1 class="text-3xl font-bold mb-8 capitalize">
      {cat ? `${cat} Properties` : 'Properties'}
    </h1>

    {filtered.length > 0 ? (
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {filtered.map((listing) => <PropertyCard listing={listing} />)}
      </div>
    ) : (
      <p>No listings found for this category yet.</p>
    )}
  </section>
</MainLayout>
