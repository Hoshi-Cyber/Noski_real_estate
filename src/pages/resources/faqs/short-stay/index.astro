---
import MainLayout from '../../../../layouts/MainLayout.astro';

const title = 'Short-Stay FAQs | Severino Reality';
const description = 'Common questions for short-stay guests and hosts.';
const guideUrl = '/short-stays';

const faqs = [
  { q:'Minimum stay length?', aHtml:'<p>Define per unit and season. Longer minimums reduce churn and cleaning load.</p>' },
  { q:'Whatâ€™s included in rates?', aHtml:'<p>List utilities, Wi-Fi, housekeeping cadence, and any extra fees up front.</p>' },
  { q:'Check-in/out process?', aHtml:'<p>Provide clear instructions, access codes, and a 24/7 contact for issues.</p>' },
  { q:'House rules?', aHtml:'<p>Occupancy limits, smoking, events, pets, quiet hours, and damage policy.</p>' },
  { q:'Cancellation policy?', aHtml:'<p>Choose flexible/standard/strict. Align with channel policies if listed externally.</p>' },
  { q:'Security deposit/holds?', aHtml:'<p>Explain amount, hold period, and claim criteria. Share inspection checklist.</p>' },
];

const ld = {
  '@context': 'https://schema.org',
  '@type': 'FAQPage',
  mainEntity: faqs.map(f => ({ '@type':'Question', name:f.q, acceptedAnswer:{ '@type':'Answer', text:f.aHtml.replace(/<[^>]*>/g,'') } })),
};
---
<MainLayout {title} {description}>
  <section class="max-w-7xl mx-auto px-4 py-8 md:py-10">
    <header class="mb-6 md:mb-8">
      <h1 class="text-2xl md:text-3xl font-bold text-primary">Short-Stay FAQs</h1>
      <div class="mt-3 flex items-center gap-3">
        <input id="faq-q" type="search" placeholder="Search Short-Stay FAQs" class="w-full max-w-lg rounded-md ring-1 ring-neutral-300 px-3 py-2 text-sm" aria-label="Search Short-Stay FAQs" />
        <a href={guideUrl} class="rounded-md px-3 py-2 bg-[color:var(--color-cta)] text-white text-sm">View Short-Stays</a>
      </div>
    </header>

    <div id="faq-list" class="divide-y divide-neutral-200 rounded-md ring-1 ring-neutral-200 bg-white">
      {faqs.map(f => (
        <details class="group">
          <summary class="list-none cursor-pointer px-4 py-3 flex items-center justify-between">
            <span class="font-medium text-primary">{f.q}</span>
            <svg class="w-4 h-4 transition-transform group-open:rotate-180" viewBox="0 0 24 24" fill="none" stroke="currentColor" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
            </svg>
          </summary>
          <div class="px-4 pb-4 text-neutral-700 prose max-w-none" set:html={f.aHtml}></div>
        </details>
      ))}
    </div>

    <script type="application/ld+json">{JSON.stringify(ld)}</script>
  </section>

  <script type="module" client:load>
    const q = document.getElementById('faq-q');
    const list = document.getElementById('faq-list');

    // Filter
    q?.addEventListener('input', () => {
      const term = q.value.toLowerCase();
      list.querySelectorAll('details').forEach(d => {
        const t = d.querySelector('span')?.textContent?.toLowerCase() || '';
        d.classList.toggle('hidden', term && !t.includes(term));
      });
    });

    // One-open-only
    function closeOthers(except){
      list.querySelectorAll('details[open]').forEach(d => { if (d !== except) d.removeAttribute('open'); });
    }
    list?.addEventListener('toggle', (e) => {
      const d = e.target;
      if (d.tagName !== 'DETAILS') return;
      if (d.open) closeOthers(d);
    }, true);

    // Hash open
    const hash = decodeURIComponent(location.hash.slice(1));
    if (hash && list) {
      const match = [...list.querySelectorAll('details')].find(d =>
        (d.querySelector('span')?.textContent || '').toLowerCase().includes(hash.toLowerCase())
      );
      if (match) { closeOthers(match); match.open = true; }
    }
  </script>
</MainLayout>
