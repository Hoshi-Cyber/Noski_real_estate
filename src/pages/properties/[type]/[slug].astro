---
import { getCollection } from 'astro:content';
import MainLayout from '../../../layouts/MainLayout.astro';
import fs from 'node:fs';
import path from 'node:path';
import { fileURLToPath } from 'node:url';
import { withV } from '../../../lib/assets';

export const prerender = true;

export async function getStaticPaths() {
  const listings = await getCollection('listings');
  return listings.map((entry) => {
    const type = (entry.data.availability || '').toLowerCase().replace(/\s+/g, '-');
    return { params: { type, slug: entry.slug } };
  });
}

const { type, slug } = Astro.params;
const norm = (s: string = '') => s.toLowerCase().replace(/\s+/g, '-');

const all = await getCollection('listings');
const entry = all.find(
  (e) => e.slug === slug && norm(e.data.availability || '') === type
);
const data = entry?.data as any | undefined;
const notFound = !entry;

// canonicalize /properties/{availability}/slug
if (!notFound) {
  const canonicalType = norm(data?.availability || '');
  if (canonicalType && canonicalType !== type) {
    return Astro.redirect(`/properties/${canonicalType}/${slug}`, 301);
  }
}

// ---- Images (public folder scan first, then frontmatter fallbacks) ----
let images: string[] = [];
try {
  const folder = (data?.imagesFolder || '').replace(/^\/+/, '');
  if (folder) {
    const publicDirUrl = new URL('../../../../public/', import.meta.url);
    const publicDir = fileURLToPath(publicDirUrl);
    const dir = path.join(publicDir, folder);

    if (fs.existsSync(dir)) {
      const files = fs
        .readdirSync(dir)
        .filter((f) => /\.(webp|jpg|jpeg|png)$/i.test(f))
        .sort((a, b) => {
          const ah = /hero\./i.test(a) ? 0 : 1;
          const bh = /hero\./i.test(b) ? 0 : 1;
          if (ah !== bh) return ah - bh;
          return a.localeCompare(b, undefined, { numeric: true, sensitivity: 'base' });
        });
      images = files.map((f) => `/${folder}/${f}`);
    }
  }
} catch {
  // ignore
}

if (!Array.isArray(images) || images.length === 0) {
  images =
    (Array.isArray(data?.images) && data.images.length > 0)
      ? data.images
      : [data?.heroImage ?? '/images/placeholder.webp'];
}
images = images.map(withV);

// ---- Derived fields & SEO ----
const priceNumber: number | undefined =
  typeof data?.price === 'number' ? data.price : undefined;
const priceText =
  typeof data?.price === 'number' ? `KSh ${data.price.toLocaleString()}` : 'N/A';

const avail = (data?.availability || '').toLowerCase();
const serviceType = avail.includes('rent')
  ? 'rent'
  : avail.includes('sale')
    ? 'sale'
    : 'short-stays';

const enquireHref = `/list-property?serviceType=${serviceType}`;

const badgeClass =
  avail.includes('rent') ? 'bg-emerald-600' :
  avail.includes('sale') ? 'bg-blue-600' :
  'bg-neutral-800';

const sameAvail = notFound
  ? []
  : all.filter(
      (e) =>
        e.slug !== slug &&
        (e.data.availability || '').toLowerCase() === (data?.availability || '').toLowerCase()
    );

const sameLocation = notFound
  ? []
  : sameAvail.filter(
      (e) => (e.data.location || '').toLowerCase() === (data?.location || '').toLowerCase()
    );

const relatedPool = sameLocation.length >= 3 ? sameLocation : sameAvail;
const related = relatedPool.slice(0, 3);

const videoUrl = data?.videoUrl as string | undefined;
const isYouTube = typeof videoUrl === 'string' && /youtube\.com|youtu\.be/.test(videoUrl);
const isVimeo = typeof videoUrl === 'string' && /vimeo\.com/.test(videoUrl);

const neighborhood: string[] =
  (Array.isArray(data?.neighborhoodHighlights) && data.neighborhoodHighlights) ||
  (Array.isArray(data?.neighborhood) && data.neighborhood) ||
  (Array.isArray(data?.nearby) && data.nearby) ||
  [];

const floorPlans: string[] = (Array.isArray(data?.floorPlans) ? data.floorPlans : []).map(withV);

const canonicalPath = notFound
  ? '/properties'
  : `/properties/${norm(data?.availability || '')}/${slug}`;
const canonicalUrl = Astro.site ? new URL(canonicalPath, Astro.site).toString() : canonicalPath;

// ---- JSON-LD ----
const offerAvailability =
  avail.includes('rent') || avail.includes('sale')
    ? 'https://schema.org/InStock'
    : 'https://schema.org/PreOrder';

const listingType = (data?.type || 'Residence').toLowerCase();
const schemaResidenceType =
  listingType.includes('apartment') ? 'Apartment' :
  listingType.includes('villa') ? 'House' :
  listingType.includes('house') ? 'House' :
  listingType.includes('studio') ? 'Apartment' :
  listingType.includes('commercial') ? 'Place' : 'Residence';

const realEstateLD = notFound
  ? null
  : {
      '@context': 'https://schema.org',
      '@type': 'RealEstateListing',
      name: data?.title,
      description: data?.description || `${data?.title} in ${data?.location}`,
      url: canonicalUrl,
      image: images,
      address: {
        '@type': 'PostalAddress',
        addressLocality: data?.location || 'Nairobi',
        addressCountry: 'KE'
      },
      itemOffered: {
        '@type': schemaResidenceType,
        name: data?.title,
        numberOfRoomsTotal: data?.bedrooms || undefined,
        numberOfBathroomsTotal: data?.bathrooms || undefined
      },
      offers: {
        '@type': 'Offer',
        price: priceNumber,
        priceCurrency: 'KES',
        availability: offerAvailability,
        url: canonicalUrl
      }
    };

const breadcrumbLD = {
  '@context': 'https://schema.org',
  '@type': 'BreadcrumbList',
  itemListElement: [
    { '@type': 'ListItem', position: 1, name: 'Home', item: Astro.site ? new URL('/', Astro.site).toString() : '/' },
    { '@type': 'ListItem', position: 2, name: 'Properties', item: Astro.site ? new URL('/properties', Astro.site).toString() : '/properties' },
    !notFound && { '@type': 'ListItem', position: 3, name: data?.availability, item: canonicalUrl.replace(`/${slug}`, '') },
    !notFound && { '@type': 'ListItem', position: 4, name: data?.title, item: canonicalUrl },
  ].filter(Boolean)
};
---

<MainLayout
  title={notFound ? 'Listing Not Found – Severino Realty' : `${data.title} – Severino Realty`}
  description={notFound ? 'We could not find the property you are looking for.' : `${data.title} in ${data.location}`}
  seoImage={images[0] || '/images/placeholder.webp'}
>
  <link rel="canonical" href={canonicalUrl} />

  {!notFound && (
    <>
      <script type="application/ld+json" is:inline>{JSON.stringify(realEstateLD)}</script>
      <script type="application/ld+json" is:inline>{JSON.stringify(breadcrumbLD)}</script>
    </>
  )}

  {notFound ? (
    <section class="py-16 px-4 text-center max-w-3xl mx-auto">
      <h1 class="text-3xl font-bold text-primary mb-4">Listing Not Found</h1>
      <a href="/for-rent" class="inline-block bg-cta text-white px-6 py-3 rounded-md">Browse Properties</a>
    </section>
  ) : (
    <>
      <!-- Hero / Carousel -->
      <section class="relative">
        <div id="carousel" class="relative aspect-[16/9] max-h-[70vh] overflow-hidden bg-black">
          {images.map((src, idx) => (
            <img
              src={src}
              alt={data.title}
              class="absolute inset-0 h-full w-full object-cover transition-opacity duration-700"
              style={`opacity:${idx === 0 ? '1' : '0'}`}
              loading={idx === 0 ? 'eager' : 'lazy'}
            />
          ))}
          <button id="prev" class="absolute left-3 top-1/2 -translate-y-1/2 bg-black/40 text-white px-3 py-2 rounded-md">‹</button>
          <button id="next" class="absolute right-3 top-1/2 -translate-y-1/2 bg-black/40 text-white px-3 py-2 rounded-md">›</button>

          <div id="dots" class="absolute bottom-3 left-1/2 -translate-x-1/2 flex gap-2">
            {images.map((_, i) => (
              <button class={`h-2.5 w-2.5 rounded-full ${i === 0 ? 'bg-white' : 'bg-white/60'}`} aria-label={`Go to slide ${i+1}`}></button>
            ))}
          </div>
        </div>
      </section>

      <!-- Header -->
      <section class="max-w-6xl mx-auto px-4 py-8">
        <div class="flex flex-wrap items-start gap-4">
          <span class={`text-xs text-white px-2 py-1 rounded ${badgeClass}`}>
            {data.availability}
          </span>
          <h1 class="text-2xl md:text-3xl font-semibold">{data.title}</h1>
        </div>
        <p class="text-neutral-600 mt-1">{data.location}</p>
        <div class="mt-4 flex flex-wrap items-center gap-4">
          <span class="text-xl font-bold">{priceText}</span>
          <span class="text-sm text-neutral-600">{data.bedrooms ?? '—'} bd • {data.bathrooms ?? '—'} ba</span>
          <a href={enquireHref} class="ml-auto bg-cta text-white px-5 py-2 rounded-md">Enquire</a>
        </div>
      </section>

      <!-- Details -->
      <section class="max-w-6xl mx-auto px-4 grid md:grid-cols-3 gap-8 pb-10">
        <article class="md:col-span-2 space-y-6">
          {data.description && <p class="leading-relaxed text-neutral-800">{data.description}</p>}

          {neighborhood.length > 0 && (
            <div>
              <h2 class="text-lg font-semibold mb-2">Neighborhood highlights</h2>
              <ul class="list-disc pl-5 space-y-1">
                {neighborhood.map((x) => <li>{x}</li>)}
              </ul>
            </div>
          )}

          {floorPlans.length > 0 && (
            <div>
              <h2 class="text-lg font-semibold mb-2">Floor plans</h2>
              <ul class="list-disc pl-5 space-y-1">
                {floorPlans.map((f) => (
                  <li><a href={f} class="text-primary underline" target="_blank" rel="noopener">View plan</a></li>
                ))}
              </ul>
            </div>
          )}

          {videoUrl && (
            <div class="aspect-video w-full">
              {isYouTube ? (
                <iframe
                  src={`https://www.youtube.com/embed/${videoUrl.split('v=')[1] || ''}`}
                  class="h-full w-full"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                  allowfullscreen
                  loading="lazy"
                />
              ) : isVimeo ? (
                <iframe
                  src={videoUrl.replace('vimeo.com', 'player.vimeo.com/video')}
                  class="h-full w-full"
                  allow="autoplay; fullscreen; picture-in-picture"
                  allowfullscreen
                  loading="lazy"
                />
              ) : (
                <video controls class="h-full w-full">
                  <source src={videoUrl} />
                </video>
              )}
            </div>
          )}
        </article>

        <aside class="space-y-4">
          <div class="rounded-xl border p-4">
            <h3 class="font-semibold mb-2">Quick facts</h3>
            <ul class="space-y-1 text-sm text-neutral-700">
              <li><strong>Type:</strong> {data.type ?? '—'}</li>
              <li><strong>Bedrooms:</strong> {data.bedrooms ?? '—'}</li>
              <li><strong>Bathrooms:</strong> {data.bathrooms ?? '—'}</li>
              <li><strong>Parking:</strong> {data.parking ?? '—'}</li>
              <li><strong>Area:</strong> {data.area ?? '—'}</li>
            </ul>
          </div>

          <a href={enquireHref} class="block text-center bg-primary text-white px-5 py-3 rounded-md">
            Enquire about this property
          </a>
        </aside>
      </section>

      <!-- Related -->
      {related.length > 0 && (
        <section class="max-w-6xl mx-auto px-4 pb-16">
          <h2 class="text-xl font-semibold mb-4">You might also like</h2>
          <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
            {related.map((e) => {
              const href = `/properties/${norm(e.data.availability || '')}/${e.slug}`;
              const img = (e.data.heroImage || e.data.images?.[0] || '/images/placeholder.webp');
              return (
                <a href={href} class="block rounded-xl overflow-hidden border hover:shadow">
                  <img src={withV(img)} alt={e.data.title} class="h-40 w-full object-cover" loading="lazy" />
                  <div class="p-3">
                    <h3 class="font-medium">{e.data.title}</h3>
                    <p class="text-sm text-neutral-600">{e.data.location}</p>
                  </div>
                </a>
              );
            })}
          </div>
        </section>
      )}
    </>
  )}
</MainLayout>

<script is:inline>
  (function(){
    const root = document.getElementById('carousel');
    if (!root) return;

    const slides = Array.from(root.querySelectorAll('img'));
    const dotsWrap = document.getElementById('dots');
    const dots = dotsWrap ? Array.from(dotsWrap.querySelectorAll('button')) : [];
    const prev = document.getElementById('prev');
    const next = document.getElementById('next');

    let i = 0, t;
    const show = (n) => {
      i = (n + slides.length) % slides.length;
      slides.forEach((img, idx) => img.style.opacity = idx === i ? '1' : '0');
      dots.forEach((d, idx) => d.className = 'h-2.5 w-2.5 rounded-full ' + (idx===i ? 'bg-white' : 'bg-white/60'));
    };
    const start = () => { stop(); t = setInterval(()=>show(i+1), 4500); };
    const stop  = () => { if (t) clearInterval(t); };

    prev && prev.addEventListener('click', () => { show(i-1); start(); });
    next && next.addEventListener('click', () => { show(i+1); start(); });
    dots.forEach((d, idx) => d.addEventListener('click', () => { show(idx); start(); }));

    let sx=0;
    root.addEventListener('touchstart', e=>{ sx = e.touches[0].clientX; stop(); }, {passive:true});
    root.addEventListener('touchend', e=>{
      const dx = e.changedTouches[0].clientX - sx;
      if (Math.abs(dx) > 40) show(i + (dx<0?1:-1));
      start();
    }, {passive:true});

    start();
  })();
</script>
