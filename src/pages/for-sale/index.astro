---
import { getCollection } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';
import PropertyCard from '../../components/PropertyCard.astro';

// Utils
const num = (v:any) => {
  if (typeof v === 'number') return v;
  const n = Number(String(v || '').replace(/[^\d]/g, ''));
  return Number.isFinite(n) ? n : 0;
};
const ts = (d:any) => {
  const val = d?.updatedAt || d?.publishedAt || d?.createdAt || d?.date || 0;
  const n = new Date(val).getTime();
  return Number.isFinite(n) ? n : 0;
};

// Data: SALE only (case-insensitive)
const all = await getCollection('listings');
const saleOnly = all.filter(e => (e.data.availability || '').toLowerCase().includes('sale'));

// Section slices (dedupe between sections)
const seen = new Set<string>();
const take = (arr:any[], limit:number) => {
  const out:any[] = [];
  for (const e of arr) {
    if (seen.has(e.slug)) continue;
    out.push(e);
    seen.add(e.slug);
    if (out.length >= limit) break;
  }
  return out;
};

// Featured & New (feature flag + recency)
const featured = saleOnly.filter(e => !!(e.data as any).featured);
const newest   = [...saleOnly].sort((a,b) => ts(b.data) - ts(a.data));
const secFeaturedNew = take([...featured, ...newest], 4);

// Budget (≤ KSh 10M)
const budget = saleOnly.filter(e => num((e.data as any).price) > 0 && num((e.data as any).price) <= 10_000_000);
const secBudget = take(budget.sort((a,b)=> num(a.data.price)-num(b.data.price)), 4);

// Luxury (≥ KSh 40M)
const luxury = saleOnly.filter(e => num((e.data as any).price) >= 40_000_000);
const secLuxury = take(luxury.sort((a,b)=> num(b.data.price)-num(a.data.price)), 4);
---

<MainLayout
  title="Properties for Sale – Severino Realty"
  description="Browse hand-picked properties for sale across Nairobi and beyond. Featured, budget, and luxury picks — with a link to the full search."
>
  <section class="py-12 max-w-7xl mx-auto px-4">
    <!-- Mobile-friendly header actions -->
    <div class="flex flex-wrap items-center justify-between gap-3 mb-6">
      <h1 class="text-3xl font-bold text-primary">Homes for Sale</h1>

      <!-- Compact, single-row, scrollable on small screens -->
      <div class="-mx-1 max-w-full overflow-x-auto scrollbar-hide">
        <div class="flex gap-2 px-1">
          <a href="/listings?availability=for-sale" class="btn-cta cta-fluid shrink-0 whitespace-nowrap">Browse all for sale</a>
          <a href="/for-rent" class="btn-outline cta-fluid shrink-0 whitespace-nowrap">For Rent</a>
          <a href="/short-stays" class="btn-outline cta-fluid shrink-0 whitespace-nowrap">Short Stays</a>
        </div>
      </div>
    </div>

    <!-- Featured & New -->
    {secFeaturedNew.length > 0 && (
      <>
        <header class="landing-head mb-3">
          <h2 class="landing-h2">Featured & New</h2>
          <a href="/listings?availability=for-sale&sort=date_desc" class="btn-subtle cta-fluid shrink-0 whitespace-nowrap">See more</a>
        </header>
        <ul class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 mb-10">
          {secFeaturedNew.map(e => (
            <li><PropertyCard listing={e.data} slug={e.slug} /></li>
          ))}
        </ul>
      </>
    )}

    <!-- Budget -->
    {secBudget.length > 0 && (
      <>
        <header class="landing-head mb-3">
          <h2 class="landing-h2">Budget Picks (≤ KSh 10M)</h2>
          <a href="/listings?availability=for-sale" class="btn-subtle cta-fluid shrink-0 whitespace-nowrap">See all budget</a>
        </header>
        <ul class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 mb-10">
          {secBudget.map(e => (
            <li><PropertyCard listing={e.data} slug={e.slug} /></li>
          ))}
        </ul>
      </>
    )}

    <!-- Luxury -->
    {secLuxury.length > 0 && (
      <>
        <header class="landing-head mb-3">
          <h2 class="landing-h2">Luxury Collection (≥ KSh 40M)</h2>
          <a href="/listings?availability=for-sale" class="btn-subtle cta-fluid shrink-0 whitespace-nowrap">See all luxury</a>
        </header>
        <ul class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
          {secLuxury.map(e => (
            <li><PropertyCard listing={e.data} slug={e.slug} /></li>
          ))}
        </ul>
      </>
    )}
  </section>
</MainLayout>

<!-- Cosmetic: ensure URL shows ?availability=for-sale for share/back/forward context -->
<script is:inline>
  (function () {
    try {
      const u = new URL(window.location.href);
      if (u.searchParams.get('availability') !== 'for-sale') {
        u.searchParams.set('availability', 'for-sale');
        history.replaceState({}, '', u);
      }
    } catch {}
  })();
</script>
