---
import MainLayout from '../../../layouts/MainLayout.astro';
import { getCollection } from 'astro:content';
import { BLOG_CATEGORIES } from '../../../lib/blog-categories';
import Breadcrumb from '../../../components/Breadcrumb.astro';

export function getStaticPaths() {
  return Object.keys(BLOG_CATEGORIES).map((category) => ({ params: { category } }));
}

const slug = (Astro.params.category || '') as keyof typeof BLOG_CATEGORIES;
const meta = BLOG_CATEGORIES[slug];
if (!meta) return Astro.redirect('/blog');

const postsAll = (await getCollection('blog'))
  .filter((p) => !p.data.draft && p.data.category === meta.label)
  .sort(
    (a, b) =>
      new Date(b.data.date ?? b.data.pubDate ?? 0) -
      new Date(a.data.date ?? a.data.pubDate ?? 0),
  );

const url = new URL(Astro.url);
const pageSize = 12;
const currentPage = Math.max(1, Number(url.searchParams.get('page') ?? '1'));
const totalPages = Math.max(1, Math.ceil(postsAll.length / pageSize));
const start = (currentPage - 1) * pageSize;
const pagePosts = postsAll.slice(start, start + pageSize);

const postHref = (p: any) => `/blog/${p.slug}`;
const imgOf = (p: any) => p?.data?.heroImage || '/images/placeholders/hero-house-1.webp';
const when = (p: any) =>
  new Date(p.data.date ?? p.data.pubDate ?? Date.now()).toLocaleDateString(
    undefined,
    { month: 'short', day: '2-digit', year: 'numeric' },
  );

const title = `${meta.label} – Blog`;
const description = meta.description;

const breadcrumbTrail = [
  { label: 'Blog', href: '/blog' },
  { label: meta.label }
];
---

<MainLayout title={title} description={description}>
  <!-- Breadcrumb -->
  <Breadcrumb segments={breadcrumbTrail} />

  <header class="mt-4">
    <h1 class="text-2xl sm:text-3xl font-semibold">{meta.label}</h1>
    {meta.description && <p class="mt-2 text-slate-600">{meta.description}</p>}
  </header>

  <section class="mt-6">
    <!-- 1 col (mobile), 2 (sm), 3 (md), 4 (xl) -->
    <div class="grid gap-6 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4">
      {pagePosts.map((p) => (
        <a href={postHref(p)} class="rounded-xl overflow-hidden ring-1 ring-slate-200 bg-white hover:shadow-md transition">
          <div class="relative aspect-[3/2] bg-slate-100">
            <img
              src={imgOf(p)}
              alt={p.data.title}
              class="absolute inset-0 w-full h-full object-cover"
              width="900" height="600" loading="lazy" decoding="async"
            />
          </div>
          <div class="p-4">
            <div class="flex items-center gap-2 text-xs text-slate-600">
              <span class="pill">{meta.label}</span>
              <span aria-hidden="true">·</span>
              <time datetime={new Date(p.data.date ?? p.data.pubDate ?? Date.now()).toISOString()}>{when(p)}</time>
            </div>
            <h2 class="mt-2 text-slate-900 font-semibold line-clamp-2">{p.data.title}</h2>
            {p.data.description && <p class="mt-1 text-sm text-slate-600 line-clamp-2">{p.data.description}</p>}
            <span class="mt-3 inline-block text-sm font-medium text-[color:var(--color-cta,#2563eb)]">Read more →</span>
          </div>
        </a>
      ))}
    </div>

    {totalPages > 1 && (
      <nav class="mt-8 flex items-center justify-center gap-2" aria-label="Pagination">
        <a
          rel="prev"
          href={`?page=${Math.max(1, currentPage - 1)}`}
          class={`pg-btn ${currentPage === 1 ? 'pg-disabled' : ''}`}
          aria-disabled={currentPage === 1}
        >Prev</a>

        {Array.from({ length: totalPages }).map((_, i) => {
          const num = i + 1;
          return (
            <a
              href={`?page=${num}`}
              class={`pg-num ${num === currentPage ? 'pg-active' : ''}`}
              aria-current={num === currentPage ? 'page' : undefined}
            >{num}</a>
          );
        })}

        <a
          rel="next"
          href={`?page=${Math.min(totalPages, currentPage + 1)}`}
          class={`pg-btn ${currentPage === totalPages ? 'pg-disabled' : ''}`}
          aria-disabled={currentPage === totalPages}
        >Next</a>
      </nav>
    )}
  </section>
</MainLayout>

<style is:inline>
  .pill{ @apply inline-flex items-center px-2 py-0.5 text-xs font-medium rounded-full bg-slate-100 text-slate-700; }
  .pg-btn{ @apply inline-flex items-center px-3 py-1.5 rounded-md border border-slate-200 bg-white text-sm text-slate-700 hover:border-slate-300; }
  .pg-num{ @apply inline-flex items-center justify-center w-9 h-9 rounded-md border border-slate-200 bg-white text-sm text-slate-700 hover:border-slate-300; }
  .pg-active{ @apply bg-slate-900 text-white border-slate-900; }
  .pg-disabled{ @apply opacity-50 pointer-events-none; }
  .line-clamp-2{ display:-webkit-box; -webkit-line-clamp:2; -webkit-box-orient:vertical; overflow:hidden; }
</style>
