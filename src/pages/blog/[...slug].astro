---
import MainLayout from '../../layouts/MainLayout.astro';
import PostLayout from '../../components/blog/PostLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import Breadcrumb from '../../components/Breadcrumb.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((p) => ({
    params: { slug: p.slug },
    props: { entry: p },
  }));
}

const entry = (Astro.props?.entry as CollectionEntry<'blog'> | undefined) ?? null;

// Defensive fallback (shouldnâ€™t run if props are passed correctly)
let resolved = entry;
if (!resolved) {
  const posts = await getCollection('blog');
  const slug = String(Astro.params.slug || '');
  resolved = posts.find((p) => p.slug === slug) ?? null;
}

if (!resolved) {
  throw new Error('Post not found');
}

const { Content, headings } = await resolved.render();

const toc =
  (headings ?? [])
    .filter((h) => h.depth === 2 || h.depth === 3)
    .map((h) => ({ id: h.slug, text: h.text, level: h.depth === 3 ? 3 : 2 }));

const all = await getCollection('blog');
const related = all
  .filter((p) => p.id !== resolved.id && p.data.category === resolved.data.category)
  .slice(0, 4);

const pageTitle = `${resolved.data.title} | Blog | Severino Realty`;
const pageDesc = resolved.data.description ?? '';

/** Category slug mapping */
const CAT_PATHS: Record<string, string> = {
  'Buyer & Renter Tips': 'buying-renting-tips',
  'Seller & Marketing Tips': 'seller-marketing-tips',
  'Short-Stay & Lifestyle': 'short-stay-lifestyle',
  'Local Living Features': 'local-living-features',
};

const breadcrumbTrail = [
  { label: 'Blog', href: '/blog' },
  { label: resolved.data.category, href: `/blog/${CAT_PATHS[resolved.data.category]}` },
  { label: resolved.data.title }
];
---

<MainLayout title={pageTitle} description={pageDesc}>
  <PostLayout entry={resolved} headings={toc} related={related}>
    <!-- Breadcrumb sits inside PostLayout, directly above the title -->
    <Breadcrumb segments={breadcrumbTrail} slot="breadcrumb" />

    <Content />
  </PostLayout>
</MainLayout>
