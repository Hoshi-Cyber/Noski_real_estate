---
import MainLayout from '../../layouts/MainLayout.astro';
import PostLayout from '../../components/blog/PostLayout.astro';
import { getCollection } from 'astro:content';

export const prerender = true;

// 1) Build all blog post paths (no props)
export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((p) => ({
    params: { slug: p.slug.split('/') }, // catch-all expects array
  }));
}

// 2) Resolve entry from params with guards
const segments = (Astro.params.slug ?? []) as string[] | string;
const slug = Array.isArray(segments) ? segments.join('/') : String(segments || '');

const all = await getCollection('blog');
const entry = all.find((p) => p.slug === slug);
const notFound = !entry;

let Content: any = null;
let headings: any[] = [];

if (!notFound) {
  const rendered = await entry.render();
  Content = rendered.Content;
  headings = rendered.headings ?? [];
}

// 3) TOC + related with guards
const toc = headings
  .filter((h) => h.depth === 2 || h.depth === 3)
  .map((h) => ({ id: h.slug, text: h.text, level: h.depth === 3 ? 3 : 2 }));

const related = !notFound
  ? all
      .filter((p) => p.id !== entry.id && p.data.category === entry.data.category)
      .slice(0, 4)
  : [];

const pageTitle = !notFound
  ? `${entry.data.title} | Blog | Severino Realty`
  : 'Post Not Found | Blog | Severino Realty';

const pageDesc = !notFound ? (entry.data.description ?? '') : 'We could not find this article.';
---

<MainLayout title={pageTitle} description={pageDesc}>
  {notFound ? (
    <section class="py-16 px-4 text-center max-w-3xl mx-auto">
      <h1 class="text-3xl font-bold text-primary mb-4">Post Not Found</h1>
      <a href="/blog" class="inline-block bg-cta text-white px-6 py-3 rounded-md">Browse Blog</a>
    </section>
  ) : (
    <PostLayout entry={entry} headings={toc}>
      <Content />
    </PostLayout>
  )}
</MainLayout>
